// <auto-generated />
using System;
using DCI.Entities.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DCI.Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220509144824_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DCI.Core.ViolenceType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ChildAbuse")
                        .HasColumnType("bit");

                    b.Property<bool>("CyberBullying")
                        .HasColumnType("bit");

                    b.Property<bool>("Defilement")
                        .HasColumnType("bit");

                    b.Property<bool>("DenialOfResources")
                        .HasColumnType("bit");

                    b.Property<bool>("EarlyMarriage")
                        .HasColumnType("bit");

                    b.Property<bool>("FemaleGenitalMutilation")
                        .HasColumnType("bit");

                    b.Property<bool>("ForcedMarriage")
                        .HasColumnType("bit");

                    b.Property<bool>("PhysicalAssault")
                        .HasColumnType("bit");

                    b.Property<bool>("Psychological")
                        .HasColumnType("bit");

                    b.Property<bool>("Rape")
                        .HasColumnType("bit");

                    b.Property<bool>("SocialAssault")
                        .HasColumnType("bit");

                    b.Property<bool>("ViolationOfProperty")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ViolenceType");

                    b.HasData(
                        new
                        {
                            Id = "5e31db4e-6e79-437e-4c9e-08d666be7d9e",
                            ChildAbuse = true,
                            CyberBullying = true,
                            Defilement = true,
                            DenialOfResources = true,
                            EarlyMarriage = true,
                            FemaleGenitalMutilation = true,
                            ForcedMarriage = true,
                            PhysicalAssault = true,
                            Psychological = true,
                            Rape = true,
                            SocialAssault = true,
                            ViolationOfProperty = true
                        });
                });

            modelBuilder.Entity("DCI.Entities.Entities.Approval", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Approval");

                    b.HasData(
                        new
                        {
                            Id = "5e319b4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 418, DateTimeKind.Utc).AddTicks(1308),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-08d9b6be7c9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5034),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-08d9b6be7d9a",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5258),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e21db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5312),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "4e31db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5362),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6a79-487e-4c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5418),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9a-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5483),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-5c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5528),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-18d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5570),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-437e-4c9e-08d9b6be7d9e",
                            ActionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 419, DateTimeKind.Utc).AddTicks(5614),
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DCI.Entities.Entities.Case", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovalActionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CSOUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFatal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPerpetratorArrested")
                        .HasColumnType("bit");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateOfCase")
                        .HasColumnType("int");

                    b.Property<string>("Statement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolenceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalActionId");

                    b.HasIndex("CSOUserId");

                    b.HasIndex("ViolenceTypeId");

                    b.ToTable("Cases");

                    b.HasData(
                        new
                        {
                            Id = "5e319b4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalActionId = "5e319b4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(2066),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "First Case",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-08d9b6be7c9e",
                            ApprovalActionId = "5e31db4e-6e79-487e-4c9e-08d9b6be7c9e",
                            ApprovalStatus = 4,
                            CSOUserId = "eeae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6025),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Abeokuta",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Ogun",
                            StateOfCase = 1,
                            Statement = "statement",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-08d9b6be7d9a",
                            ApprovalActionId = "5e31db4e-6e79-487e-4c9e-08d9b6be7d9a",
                            ApprovalStatus = 4,
                            CSOUserId = "eeae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6195),
                            IsDeleted = false,
                            IsFatal = false,
                            IsPerpetratorArrested = false,
                            LGA = "Ogun",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Ogun",
                            StateOfCase = 0,
                            Statement = "Second Statement",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e21db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalActionId = "5e21db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6257),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = true,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 0,
                            Statement = "Second case",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "4e31db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalActionId = "4e31db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6304),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "Third case",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6a79-487e-4c9e-08d9b6be7d9e",
                            ApprovalActionId = "5e31db4e-6a79-487e-4c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6352),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "fourth",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9a-08d9b6be7d9e",
                            ApprovalActionId = "5e31db4e-6e79-487e-4c9a-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6395),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "fifth",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-5c9e-08d9b6be7d9e",
                            ApprovalActionId = "5e31db4e-6e79-487e-5c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6532),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "sixth",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-18d9b6be7d9e",
                            ApprovalActionId = "5e31db4e-6e79-487e-4c9e-18d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6587),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "seventh",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-437e-4c9e-08d9b6be7d9e",
                            ApprovalActionId = "5e31db4e-6e79-437e-4c9e-08d9b6be7d9e",
                            ApprovalStatus = 4,
                            CSOUserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 452, DateTimeKind.Utc).AddTicks(6634),
                            IsDeleted = false,
                            IsFatal = true,
                            IsPerpetratorArrested = false,
                            LGA = "Lagos",
                            LastDateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Lagos",
                            StateOfCase = 1,
                            Statement = "eight",
                            ViolenceTypeId = "5e31db4e-6e79-437e-4c9e-08d666be7d9e"
                        });
                });

            modelBuilder.Entity("DCI.Entities.Entities.DCIUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCSO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupervisor")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b8633e2d-a33b-45e6-8329-1958b3252bbd",
                            AccessFailedCount = 0,
                            Activated = true,
                            ConcurrencyStamp = "d3edbf36-9828-4110-96ad-659a2026e8a6",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 420, DateTimeKind.Utc).AddTicks(3758),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Admin@dci.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 0,
                            IsAdmin = true,
                            IsCSO = false,
                            IsDeleted = false,
                            IsSupervisor = false,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "Admin@dci.com",
                            NormalizedUserName = "Admin@dci.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEDidxdJJmeL1UP2S8i/wCEgAQOZd+NrWZOiaEKCvElxHXBSysrEXRfcD0O0GdWnWKw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5457bb9a-2f4b-41f6-bed4-14a8954c12de",
                            State = "Lagos",
                            TwoFactorEnabled = false,
                            UserName = "Admin@dci.com",
                            UserType = 2
                        },
                        new
                        {
                            Id = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            AccessFailedCount = 0,
                            Activated = true,
                            ConcurrencyStamp = "b3c376f7-c089-4d04-81c3-12b5326b8026",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 430, DateTimeKind.Utc).AddTicks(4893),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "CSO@dci.com",
                            EmailConfirmed = true,
                            FirstName = "CSO",
                            Gender = 0,
                            IsAdmin = false,
                            IsCSO = true,
                            IsDeleted = false,
                            IsSupervisor = false,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "CSO",
                            LockoutEnabled = false,
                            NormalizedEmail = "CSO@dci.com",
                            NormalizedUserName = "CSO@dci.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBhC5uYR82hqQA2S1Vg0Aj/0DNpjWShadw/cHKalH3B4ild3J5i7UFOEddCfFmCfnw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1a0e8034-100a-4b21-ba4c-c1612771c8c1",
                            State = "Lagos",
                            TwoFactorEnabled = false,
                            UserName = "CSO@dci.com",
                            UserType = 0
                        },
                        new
                        {
                            Id = "eeae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            AccessFailedCount = 0,
                            Activated = true,
                            ConcurrencyStamp = "e6cf31b0-427a-41bd-be13-5bdfddda16ee",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 437, DateTimeKind.Utc).AddTicks(5615),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "CSOSecond@dci.com",
                            EmailConfirmed = true,
                            FirstName = "Second",
                            Gender = 0,
                            IsAdmin = false,
                            IsCSO = true,
                            IsDeleted = false,
                            IsSupervisor = false,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Second",
                            LockoutEnabled = false,
                            NormalizedEmail = "CSOSecond@dci.com",
                            NormalizedUserName = "CSOSecond@dci.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEIzEJCr50GWNOLLk/XphWbBnp+v0BJKVZvxHdlHDM4/Ujdn+7aQeiTIPawbQWpYYIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eabb39b7-580a-4164-8af2-d176658bb95d",
                            State = "Ogun",
                            TwoFactorEnabled = false,
                            UserName = "CSOSecond@dci.com",
                            UserType = 0
                        },
                        new
                        {
                            Id = "5e31db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            AccessFailedCount = 0,
                            Activated = true,
                            ConcurrencyStamp = "296ccf6e-2375-4a82-9c6b-20e21ea50b3e",
                            CreatedOnUtc = new DateTime(2022, 5, 9, 14, 48, 23, 444, DateTimeKind.Utc).AddTicks(3121),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Supervisor@dci.com",
                            EmailConfirmed = true,
                            FirstName = "Supervisor",
                            Gender = 0,
                            IsAdmin = false,
                            IsCSO = false,
                            IsDeleted = false,
                            IsSupervisor = true,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Supervisor",
                            LockoutEnabled = false,
                            NormalizedEmail = "Supervisor@dci.com",
                            NormalizedUserName = "Supervisor@dci.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEN/ntiLkLzY+FHGfD4pw0Sut4uoXo9iF+cT4qXWHUfL1TzmeNcZud9nldwJrb7dD8Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "996bcb41-dd44-447d-b9e7-d76ea4617a2e",
                            State = "Lagos",
                            TwoFactorEnabled = false,
                            UserName = "Supervisor@dci.com",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "7063616f-3b17-431f-87a7-5c957ded8947",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "fe8d7501-6cb1-4d99-4c9f-08d9b6be7d9e",
                            ConcurrencyStamp = "545ff0c5-d13d-4428-b87d-dcba2dc01e7f",
                            Name = "SUPERVISOR",
                            NormalizedName = "SUPERVISOR"
                        },
                        new
                        {
                            Id = "e82fe09a-2419-4b9b-8a2c-b5001e71c997",
                            ConcurrencyStamp = "f95f6d52-3946-4592-9f5c-3bbfd019fec6",
                            Name = "CSO",
                            NormalizedName = "CSO"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b8633e2d-a33b-45e6-8329-1958b3252bbd",
                            RoleId = "2c5e174e-3b0e-446f-86af-483d56fd7210"
                        },
                        new
                        {
                            UserId = "b8633e2d-a33b-45e6-8329-1958b3252bbd",
                            RoleId = "fe8d7501-6cb1-4d99-4c9f-08d9b6be7d9e"
                        },
                        new
                        {
                            UserId = "b8633e2d-a33b-45e6-8329-1958b3252bbd",
                            RoleId = "e82fe09a-2419-4b9b-8a2c-b5001e71c997"
                        },
                        new
                        {
                            UserId = "5e31db4e-6e79-487e-4c9e-08d9b6be7d9e",
                            RoleId = "fe8d7501-6cb1-4d99-4c9f-08d9b6be7d9e"
                        },
                        new
                        {
                            UserId = "cdae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            RoleId = "e82fe09a-2419-4b9b-8a2c-b5001e71c997"
                        },
                        new
                        {
                            UserId = "eeae8cc2-adec-4ab1-4ca0-08d9b6be7d9e",
                            RoleId = "e82fe09a-2419-4b9b-8a2c-b5001e71c997"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DCI.Entities.Entities.Case", b =>
                {
                    b.HasOne("DCI.Entities.Entities.Approval", "ApprovalAction")
                        .WithMany()
                        .HasForeignKey("ApprovalActionId");

                    b.HasOne("DCI.Entities.Entities.DCIUser", "CSOUser")
                        .WithMany()
                        .HasForeignKey("CSOUserId");

                    b.HasOne("DCI.Core.ViolenceType", "ViolenceType")
                        .WithMany()
                        .HasForeignKey("ViolenceTypeId");
                });

            modelBuilder.Entity("DCI.Entities.Entities.DCIUser", b =>
                {
                    b.OwnsMany("DCI.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("DCIUserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DCIUserId", "Id");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("DCIUserId");
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DCI.Entities.Entities.DCIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DCI.Entities.Entities.DCIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DCI.Entities.Entities.DCIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DCI.Entities.Entities.DCIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
